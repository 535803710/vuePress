(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{457:function(t,e,s){"use strict";s.r(e);var a=s(62),v=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"什么是-vite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-vite"}},[t._v("#")]),t._v(" 什么是 Vite")]),t._v(" "),s("p",[t._v("基于 esbuild 与 Rollup，依靠浏览器自身 ESM 编译功能， 实现极致开发体验的新一代构建工具！")]),t._v(" "),s("p",[s("strong",[t._v("开发环境")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("利用浏览器原生的 ES Module 编译能力")]),t._v("，省略费时的编译环节，直给浏览器开发环境源码，dev server 只提供轻量服务。")]),t._v(" "),s("li",[t._v("浏览器执行 ESM 的 import 时，会向 dev server 发起该模块的 ajax 请求，服务器对源码做简单处理后返回给浏览器。")]),t._v(" "),s("li",[t._v("Vite 中 HMR 是在原生 ESM 上执行的。当编辑一个文件时，Vite 只需要精确地使已编辑的模块失活，使得无论应用大小如何，HMR 始终能保持快速更新。")]),t._v(" "),s("li",[t._v("使用 esbuild 处理项目依赖，esbuild 使用 go 编写，比一般 node.js 编写的编译器快几个数量级。")])]),t._v(" "),s("p",[s("strong",[t._v("生产环境")])]),t._v(" "),s("p",[t._v("集成 Rollup 打包生产环境代码，依赖其成熟稳定的生态与更简洁的插件机制。")]),t._v(" "),s("h1",{attrs:{id:"vite-核心功能实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vite-核心功能实现原理"}},[t._v("#")]),t._v(" Vite 核心功能实现原理")]),t._v(" "),s("ul",[s("li",[t._v("ESbuild 编译")]),t._v(" "),s("li",[t._v("HRM 原理\n"),s("ul",[s("li",[t._v("Vite本地启动时会创建一个WebSocket连接，同时去监听本地的文件变化")]),t._v(" "),s("li",[t._v("当用户修改了本地的文件时，WebSocket的服务端会拿到变化的文件的ID或者其他标识，并推送给客户端")]),t._v(" "),s("li",[t._v("客户端获取到变化的文件信息之后，便去请求最新的文件并刷新页面")])])]),t._v(" "),s("li",[t._v("依赖预构建\n"),s("ul",[s("li",[t._v("模块化兼容： 如开头背景所写，现仍共存多种模块化标准代码，Vite 在预构建阶段将依赖中各种其他模块化规范(CommonJS、UMD)转换 成 ESM，以提供给浏览器。")]),t._v(" "),s("li",[t._v("性能优化： npm 包中大量的 ESM 代码，大量的 import 请求，会造成网络拥塞。Vite 使用 esbuild，将有大量内部模块的 ESM 关系转换成单个模块，以减少 import 模块请求次数。")])])]),t._v(" "),s("li",[t._v("按需加载\n"),s("ul",[s("li",[t._v("服务器只在接受到 import 请求的时候，才会编译对应的文件，将 ESM 源码返回给浏览器，实现真正的按需加载。")])])]),t._v(" "),s("li",[t._v("缓存\n"),s("ul",[s("li",[t._v("HTTP 缓存： 充分利用 http 缓存做优化，依赖（不会变动的代码）部分用 max-age,immutable 强缓存，源码部分用 304 协商缓存，提升页面打开速度。")]),t._v(" "),s("li",[t._v("文件系统缓存： Vite 在预构建阶段，将构建后的依赖缓存到 node_modules/.vite ，相关配置更改时，或手动控制时才会重新构建，以提升预构建速度。")])])]),t._v(" "),s("li",[t._v("重写模块路径\n"),s("ul",[s("li",[t._v("浏览器 import 只能引入相对/绝对路径，而开发代码经常使用 npm 包名直接引入 node_module 中的模块，需要做路径转换后交给浏览器。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开发代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createApp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转换后")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createApp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/node_modules/vue/dist/vue.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h1",{attrs:{id:"与-webpack-对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与-webpack-对比"}},[t._v("#")]),t._v(" 与 webpack 对比")]),t._v(" "),s("ul",[s("li",[t._v("Webpack 配置丰富使用极为灵活但上手成本高，Vite 开箱即用配置高度集成")]),t._v(" "),s("li",[t._v("Webpack 启动服务需打包构建，速度慢，Vite 免编译可秒开")]),t._v(" "),s("li",[t._v("Webpack 热更新需打包构建，速度慢，Vite 毫秒响应")]),t._v(" "),s("li",[t._v("Webpack 成熟稳定、资源丰富、大量实践案例，Vite 实践较少")]),t._v(" "),s("li",[t._v("Vite 使用 esbuild 编译，构建速度比 webpack 快几个数量级")])])])}),[],!1,null,null,null);e.default=v.exports}}]);