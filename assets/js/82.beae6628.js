(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{496:function(t,r,a){"use strict";a.r(r);var e=a(62),o=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器相关"}},[t._v("#")]),t._v(" 浏览器相关")]),t._v(" "),a("h3",{attrs:{id:"跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),a("p",[t._v("跨域（Cross-Origin Resource Sharing, CORS）指的是浏览器在同源策略（Same-Origin Policy）限制下，网页脚本只能访问与其相同源的资源。一个源（Origin）由协议、域名和端口三部分组成。例如，来自 http://example.com:80 的网页脚本不能访问 http://another-domain.com:80 的资源，因为它们的源不同。")]),t._v(" "),a("p",[a("strong",[t._v("解决方案")])]),t._v(" "),a("ul",[a("li",[t._v("JSONP：适用于简单的 GET 请求，但安全性较差，不适用于现代应用。")]),t._v(" "),a("li",[t._v("CORS：是解决跨域问题的标准方法，推荐使用，但需要后端支持。")]),t._v(" "),a("li",[t._v("代理服务器：适合在开发环境中使用，配置简单。")]),t._v(" "),a("li",[t._v("服务器端中转：适用于复杂的请求或后端逻辑，但增加了服务器的负担。")]),t._v(" "),a("li",[t._v("img 标签通常不会受到跨域影响")])]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/浏览器/浏览器渲染/"}},[t._v("从 url 到渲染")])],1),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/浏览器/http缓存/"}},[t._v("浏览器缓存")])],1),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/浏览器/屏幕录制/"}},[t._v("屏幕录制")])],1),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/浏览器/阻止默认事件/"}},[t._v("阻止默认事件")])],1),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/浏览器/CSS的color()/"}},[t._v("CSS 的 color()")])],1),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/最佳实践/垃圾回收机制/"}},[t._v("垃圾回收机制")])],1),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/浏览器/V8引擎/"}},[t._v("V8 引擎")]),t._v(" "),a("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/7f81b9b58b95ccfa0cee828eac417fdd.webp",alt:""}})],1)])}),[],!1,null,null,null);r.default=o.exports}}]);