(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{465:function(a,t,e){"use strict";e.r(t);var s=e(62),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[a._v("#")]),a._v(" 目录")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E7%9B%AE%E5%BD%95"}},[a._v("目录")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E5%8F%8C%E7%BA%BF%E7%A8%8B%E6%9E%B6%E6%9E%84"}},[a._v("双线程架构")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%8F%8C%E7%BA%BF%E7%A8%8B%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1"}},[a._v("小程序的双线程架构设计。")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#webview-%E6%98%AF%E4%BB%80%E4%B9%88"}},[a._v("webview 是什么？")])])])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E5%8F%8C%E7%BA%BF%E7%A8%8B%E5%AF%B9%E6%AF%94%E5%8D%95%E7%BA%BF%E7%A8%8B%E7%9A%84%E4%BC%98%E5%8A%BF%E5%9C%A8%E5%93%AA%E9%87%8C"}},[a._v("双线程对比单线程的优势在哪里。")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#native-%E5%B1%82%E5%9C%A8%E5%8F%8C%E7%BA%BF%E7%A8%8B%E6%9E%B6%E6%9E%84%E4%B8%AD%E8%B5%B7%E5%88%B0%E6%80%8E%E6%A0%B7%E7%9A%84%E4%BD%9C%E7%94%A8"}},[a._v("Native 层在双线程架构中起到怎样的作用。")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E4%BC%A0%E7%BB%9F-h5-%E7%9A%84%E5%AE%89%E5%85%A8%E7%AE%A1%E6%8E%A7%E9%97%AE%E9%A2%98"}},[a._v("如何解决传统 h5 的安全管控问题")])])])]),a._v(" "),e("li",[e("a",{attrs:{href:"#wxml-%E6%A0%87%E7%AD%BE%E8%AF%AD%E8%A8%80%E8%AE%BE%E8%AE%A1"}},[a._v("WXML 标签语言设计")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#wxml-%E8%AF%AD%E6%B3%95%E8%AE%BE%E8%AE%A1%E6%80%9D%E8%B7%AF"}},[a._v("WXML 语法设计思路")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#wxss-%E8%AF%AD%E6%B3%95%E6%A6%82%E5%BF%B5"}},[a._v("WXSS 语法概念")])])])]),a._v(" "),e("li",[e("a",{attrs:{href:"#pageframe-%E5%AE%9E%E7%8E%B0%E5%BF%AB%E9%80%9F%E6%B8%B2%E6%9F%93"}},[a._v("PageFrame 实现快速渲染")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BB%84%E4%BB%B6%E7%B3%BB%E7%BB%9F-exparser-%E8%AE%BE%E8%AE%A1%E5%8E%9F%E7%90%86"}},[a._v("小程序组件系统 Exparser 设计原理")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#webcomponent-%E5%8E%9F%E7%90%86"}},[a._v("WebComponent 原理")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#custom-elements-%E8%A7%84%E8%8C%83"}},[a._v("Custom Elements 规范")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#template-%E8%A7%84%E8%8C%83"}},[a._v("Template 规范")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#shadow-dom-%E8%A7%84%E8%8C%83"}},[a._v("Shadow DOM 规范")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#exparser-%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86"}},[a._v("Exparser 框架原理")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E5%86%85%E7%BD%AE%E7%BB%84%E4%BB%B6"}},[a._v("内置组件")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6"}},[a._v("自定义组件")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E7%BB%84%E4%BB%B6%E9%97%B4%E9%80%9A%E4%BF%A1"}},[a._v("组件间通信")])])])])])])])]),a._v(" "),e("li",[e("a",{attrs:{href:"#wxss-%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E5%8F%8A%E5%8A%A8%E6%80%81%E9%80%82%E9%85%8D"}},[a._v("WXSS 编译原理及动态适配")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#rpx"}},[a._v("rpx")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E7%BC%96%E8%AF%91"}},[a._v("编译")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E8%AE%BE%E5%A4%87%E4%BF%A1%E6%81%AF"}},[a._v("设备信息")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E8%BD%AC%E6%8D%A2-rpx-%E9%83%A8%E5%88%86"}},[a._v("转换 rpx 部分")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#setcsstohead-%E5%87%BD%E6%95%B0%E5%B0%86%E6%A0%B7%E5%BC%8F%E6%8F%92%E5%85%A5%E5%88%B0-head"}},[a._v("setCssToHead 函数将样式插入到 head")])])])])])]),a._v(" "),e("li",[e("a",{attrs:{href:"#virtualdom-%E6%B8%B2%E6%9F%93%E6%B5%81%E7%A8%8B"}},[a._v("VirtualDOM 渲染流程")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BA%8B%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%92%8C%E9%80%9A%E8%AE%AF%E7%B3%BB%E7%BB%9F"}},[a._v("事件系统和通讯系统")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF%E4%BA%8B%E4%BB%B6"}},[a._v("什么是事件？")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BA%8B%E4%BB%B6%E7%B3%BB%E7%BB%9F"}},[a._v("事件系统")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E9%80%9A%E8%AE%AF%E7%B3%BB%E7%BB%9F"}},[a._v("通讯系统")])])])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E9%80%BB%E8%BE%91%E8%AF%AD%E6%B3%95%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F"}},[a._v("逻辑语法和生命周期")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#js-%E7%BB%93%E6%9E%84"}},[a._v("js 结构")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F"}},[a._v("生命周期")])])])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B7%AF%E7%94%B1"}},[a._v("小程序路由")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E6%89%A9%E5%B1%95"}},[a._v("扩展")])])]),a._v(" "),e("h2",{attrs:{id:"双线程架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#双线程架构"}},[a._v("#")]),a._v(" 双线程架构")]),a._v(" "),e("h3",{attrs:{id:"小程序的双线程架构设计。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小程序的双线程架构设计。"}},[a._v("#")]),a._v(" 小程序的双线程架构设计。")]),a._v(" "),e("p",[a._v("小程序渲染层和逻辑层分别由两个线程控制，渲染层使用 "),e("code",[a._v("webview")]),a._v(" 渲染，逻辑层使用 "),e("code",[a._v("JSCore")]),a._v(" 运行 "),e("code",[a._v("JavaScript")]),a._v(" 代码。")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/2f4750033e94f01570d60206a85441ac.webp",alt:"双线程"}})]),a._v(" "),e("p",[a._v("小程序逻辑层和渲染层分开运行，渲染层可以有多个 webview ，两个线程通过 Native 层统一处理。")]),a._v(" "),e("h4",{attrs:{id:"webview-是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webview-是什么"}},[a._v("#")]),a._v(" webview 是什么？")]),a._v(" "),e("p",[a._v("简单来说 webview 是手机中内置了一款高性能 webkit 内核浏览器，在 SDK 中封装的一个组件。不过没有提供地址栏和导航栏，只是单纯的展示一个网页界面。")]),a._v(" "),e("h3",{attrs:{id:"双线程对比单线程的优势在哪里。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#双线程对比单线程的优势在哪里。"}},[a._v("#")]),a._v(" 双线程对比单线程的优势在哪里。")]),a._v(" "),e("p",[a._v("运行速度大幅提升")]),a._v(" "),e("p",[a._v("原来的单线程会导致阻塞，加上请求的时间，所以需要缓存")]),a._v(" "),e("h3",{attrs:{id:"native-层在双线程架构中起到怎样的作用。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#native-层在双线程架构中起到怎样的作用。"}},[a._v("#")]),a._v(" Native 层在双线程架构中起到怎样的作用。")]),a._v(" "),e("p",[a._v("微信将 "),e("code",[a._v("WXSDK")]),a._v(" 通过 "),e("code",[a._v("Native")]),a._v(" 层注入到双线程，需要的时候再动态注入。")]),a._v(" "),e("p",[e("code",[a._v("Native")]),a._v(" 层除了做一些资源的动态注入，还负责着很多的事情，请求的转发，离线存储，组件渲染等等。界面主要由成熟的 "),e("code",[a._v("Web")]),a._v(" 技术渲染，辅之以大量的接口提供丰富的客户端原生能力。同时，每个小程序页面都是用不同的 "),e("code",[a._v("WebView")]),a._v(" 去渲染，这样可以提供更好的交互体验，更贴近原生体验，也避免了单个 "),e("code",[a._v("WebView")]),a._v(" 的任务过于繁重。")]),a._v(" "),e("h3",{attrs:{id:"如何解决传统-h5-的安全管控问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何解决传统-h5-的安全管控问题"}},[a._v("#")]),a._v(" 如何解决传统 h5 的安全管控问题")]),a._v(" "),e("p",[a._v("因为原生的 js 非常灵活，所以要避免直接获取小程序的内部")]),a._v(" "),e("p",[a._v("所以需要一个沙盒来隔离浏览器和逻辑层。在客户端有 "),e("code",[a._v("javaScript 的解释引擎")]),a._v("，可以单独建一个线程去执行 "),e("code",[a._v("JavaScript")]),a._v(" 代码。然后渲染层渲染多个 "),e("code",[a._v("webview")]),a._v(" 通过这个逻辑层去控制 "),e("code",[a._v("webview")]),a._v(" 的渲染。")]),a._v(" "),e("h2",{attrs:{id:"wxml-标签语言设计"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wxml-标签语言设计"}},[a._v("#")]),a._v(" WXML 标签语言设计")]),a._v(" "),e("h3",{attrs:{id:"wxml-语法设计思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wxml-语法设计思路"}},[a._v("#")]),a._v(" WXML 语法设计思路")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/39dab457048f0395da3a088306a52008.webp",alt:""}}),a._v(" "),a._v("\n通过 "),e("code",[a._v("Exparser框架")]),a._v(" 将小程序的 WXML 转换为 "),e("code",[a._v("webComponents")]),a._v(" 的自定义标签。 将上图转化为下图")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/a277680b263a7bb723a4229235a006dc.webp",alt:""}})]),a._v(" "),e("blockquote",[e("p",[a._v("因为 html 可以通过脚本来改变，为了安全需要将 webComponents 转成自定义标签")])]),a._v(" "),e("h3",{attrs:{id:"wxss-语法概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wxss-语法概念"}},[a._v("#")]),a._v(" WXSS 语法概念")]),a._v(" "),e("p",[e("code",[a._v("WXSS")]),a._v(" (WeiXin Style Sheets)是一套样式语言，用于描述 WXML 的组件样式。 先看一下代码中的 wxss 文件结构及语法。")]),a._v(" "),e("p",[a._v("同时最重要的是将单位按照像素比转换，不需要再做适配了。")]),a._v(" "),e("blockquote",[e("p",[a._v("wxss 会编译为 js 然后再 html 中执行")])]),a._v(" "),e("h2",{attrs:{id:"pageframe-实现快速渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pageframe-实现快速渲染"}},[a._v("#")]),a._v(" PageFrame 实现快速渲染")]),a._v(" "),e("p",[a._v("小程序每个视图层页面内容都是通过 pageframe.html 模板来生成的，包括小程序启动的首页；下面来看看小程序为快速打开小程序页面做的技术优化：")]),a._v(" "),e("ul",[e("li",[a._v("首页启动时，即第一次通过 pageframe.html 生成内容后，后台服务会缓存 pageframe.html 模板首次生成的 html 内容。")]),a._v(" "),e("li",[a._v("非首次新打开页面时，页面请求的 pageframe.html 内容直接走后台缓存")]),a._v(" "),e("li",[a._v("非首次新打开页面时，pageframe.html 页面引入的外链 js 资源(如上图所示)走本地缓存")])]),a._v(" "),e("p",[a._v("这样在后续新打开页面时，都会走缓存的 pageframe 的内容，避免重复生成，快速打开一个新页面。")]),a._v(" "),e("h2",{attrs:{id:"小程序组件系统-exparser-设计原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小程序组件系统-exparser-设计原理"}},[a._v("#")]),a._v(" 小程序组件系统 Exparser 设计原理")]),a._v(" "),e("h3",{attrs:{id:"webcomponent-原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webcomponent-原理"}},[a._v("#")]),a._v(" WebComponent 原理")]),a._v(" "),e("p",[a._v("所有的自定义元素都继承自 window 内置的 HTML 类 "),e("code",[a._v("HTMLElement")])]),a._v(" "),e("h4",{attrs:{id:"custom-elements-规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#custom-elements-规范"}},[a._v("#")]),a._v(" Custom Elements 规范")]),a._v(" "),e("ul",[e("li",[a._v("自定义元素的名称，必须包含短横线（-）。它可以确保 html 解析器能够区分常规元素和自定义元素，还能确保 html 标记的兼容性。")]),a._v(" "),e("li",[a._v("自定义元素只能一次定义一个，一旦定义无法撤回。")]),a._v(" "),e("li",[a._v("自定义元素不能单标记封闭。比如"),e("code",[a._v("<custom-component />")]),a._v("，必须写一对开闭标记。比如 "),e("code",[a._v("<custom-coponent></custom-component>")]),a._v("。")])]),a._v(" "),e("p",[a._v("对于自定义组件挂载的相关 API：")]),a._v(" "),e("ul",[e("li",[a._v("window.customElement.define('custom-component', CustomComponent, extendsInit) // 定义一个自定义元素")]),a._v(" "),e("li",[a._v("window.customElement.get('custom-component') // 返回已定义的自定义元素的构造函数")]),a._v(" "),e("li",[a._v("window.customElement.whenDefined('custom-component') // 接收一个 promise 对象，是当定义自定义元素时返回的，可监听元素状态变化但无法捕捉内部状态值。")])]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/9935d21078a301a3f6846046cfd4c20a.webp",alt:""}})]),a._v(" "),e("h4",{attrs:{id:"template-规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#template-规范"}},[a._v("#")]),a._v(" Template 规范")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/template",target:"_blank",rel:"noopener noreferrer"}},[a._v("点击这里"),e("OutboundLink")],1)]),a._v(" "),e("p",[a._v("HTML templates（HTML 模板）： "),e("code",[a._v("<template>")]),a._v("和"),e("code",[a._v("<slot>")]),a._v(" 元素使您可以编写不在呈现页面中显示的标记模板。然后它们可以作为自定义元素结构的基础被多次重用。")]),a._v(" "),e("h4",{attrs:{id:"shadow-dom-规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shadow-dom-规范"}},[a._v("#")]),a._v(" Shadow DOM 规范")]),a._v(" "),e("p",[a._v("Web components 的一个重要属性是封装——可以将标记结构、样式和行为隐藏起来，并与页面上的其他代码相隔离，保证不同的部分不会混在一起，可使代码更加干净、整洁。其中，Shadow DOM 接口是关键所在，它可以将一个隐藏的、独立的 DOM 附加到一个元素上。本篇文章将会介绍 Shadow DOM 的基础使用。\n"),e("img",{attrs:{src:"https://mdn.mozillademos.org/files/15788/shadow-dom.png",alt:""}})]),a._v(" "),e("p",[a._v("注意，不管从哪个方面来看，Shadow DOM 都不是一个新事物——在过去的很长一段时间里，浏览器用它来封装一些元素的内部结构。以一个有着默认播放控制按钮的 "),e("code",[a._v("<video>")]),a._v(" 元素为例。你所能看到的只是一个 "),e("code",[a._v("<video>")]),a._v(" 标签，实际上，在它的 Shadow DOM 中，包含了一系列的按钮和其他控制器。Shadow DOM 标准允许你为你自己的元素（custom element）维护一组 Shadow DOM。")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Web_Components/Using_shadow_DOM#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95",target:"_blank",rel:"noopener noreferrer"}},[a._v("基本使用"),e("OutboundLink")],1)]),a._v(" "),e("h4",{attrs:{id:"exparser-框架原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exparser-框架原理"}},[a._v("#")]),a._v(" Exparser 框架原理")]),a._v(" "),e("p",[a._v("Exparser 是微信小程序的组件组织框架，内置在小程序基础库中，为小程序提供各种各样的组件支撑。内置组件和自定义组件都有 Exparser 组织管理。")]),a._v(" "),e("p",[a._v("Exparser 参照 Shadow DOM 模型实现，并且进行了一些修改。")]),a._v(" "),e("p",[a._v("Exparser 的组件模型与 WebComponents 标准中的 Shadow DOM 高度相似。Exparser 会维护整个页面的节点树相关信息，包括节点的属性、事件绑定等，相当于一个简化版的 Shadow DOM 实现。Exparser 的主要特点包括以下几点：")]),a._v(" "),e("ul",[e("li",[a._v("基于 Shadow DOM 模型：模型上与 WebComponents 的 Shadow DOM 高度相似，但不依赖浏览器的- 原生支持，也没有其他依赖库；实现时，还针对性地增加了其他 API 以支持小程序组件编程。")]),a._v(" "),e("li",[a._v("可在纯 JS 环境中运行：这意味着逻辑层也具有一定的组件树组织能力。")]),a._v(" "),e("li",[a._v("高效轻量：性能表现好，在组件实例极多的环境下表现尤其优异，同时代码尺寸也较小。")])]),a._v(" "),e("h5",{attrs:{id:"内置组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内置组件"}},[a._v("#")]),a._v(" 内置组件")]),a._v(" "),e("p",[a._v("把一个组件内置到小程序框架里的一个重要原则是：这个组件是基础的。换句话说，没有这个组件的话，在小程序架构里无法实现或者实现不好某类功能。")]),a._v(" "),e("p",[a._v("比如像一些开放类组件，有 open-data 组件提供展示群名称、用户信息等微信体系下的隐私信息，有 button 组件里 open-type 属性所提供分享、跳转 App 等敏感操作的能力。")]),a._v(" "),e("p",[e("strong",[a._v("js 动画问题")]),a._v("，如果是纯 css 动画是在视图层进行，如果是 js 动画，逻辑层和视图层分开，通讯非常频繁，性能很大的损耗，所以微信开放了一个 "),e("code",[a._v("<WXS>")]),a._v("，让渲染层写 js 逻辑，避免线程直线的通讯导致性能和延时问题")]),a._v(" "),e("h5",{attrs:{id:"自定义组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义组件"}},[a._v("#")]),a._v(" 自定义组件")]),a._v(" "),e("p",[a._v("在自定义组件的概念基础上，我们可以把所有组件都进行分离，这样，各个组件也将具有各自独立的逻辑空间。每个组件都分别拥有自己的独立的数据、setData 调用。")]),a._v(" "),e("p",[a._v("整个页面节点树实质上被拆分成了若干个 ShadowTree（页面的 body 实质上也是一个组件，因而也是一个 ShadowTree）最终组成了小程序中的 Composed Tree。")]),a._v(" "),e("p",[a._v("在这个时候可以看一下官方的这句话，就非常好理解了。")]),a._v(" "),e("blockquote",[e("p",[a._v("小程序中，所有节点树相关的操作都依赖于 Exparser，包括 WXML 到页面最终节点树的构建、createSelectorQuery 调用和自定义组件特性等。")])]),a._v(" "),e("h5",{attrs:{id:"组件间通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件间通信"}},[a._v("#")]),a._v(" 组件间通信")]),a._v(" "),e("p",[a._v("Exparser 的事件系统完全模仿 Shadow DOM 的事件系统。在通常的理解中，事件可以分为冒泡事件和非冒泡事件，但在 Shadow DOM 体系中，冒泡事件还可以划分为在 Shadow Tree 上冒泡的事件和在 Composed Tree 上冒泡的事件。如果在 Shadow Tree 上冒泡，则冒泡只会经过这个组件 Shadow Tree 上的节点，这样可以有效控制事件冒泡经过的范围。")]),a._v(" "),e("p",[a._v("在自定义组件中使用 triggerEvent 触发事件时，可以指定事件的 bubbles、composed 和 capturePhase 属性，用于标注事件的冒泡性质。这一点和前面讲的自定义事件相互呼应，triggerEvent 可以理解为小程序中的自定义事件 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document/createEvent",target:"_blank",rel:"noopener noreferrer"}},[a._v("createEvent"),e("OutboundLink")],1),a._v(" 。")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/6de8e083b5a7d94bd05ad08da7b465cf.webp",alt:""}})]),a._v(" "),e("h2",{attrs:{id:"wxss-编译原理及动态适配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wxss-编译原理及动态适配"}},[a._v("#")]),a._v(" WXSS 编译原理及动态适配")]),a._v(" "),e("p",[a._v("本章节内容分解：")]),a._v(" "),e("ul",[e("li",[a._v("WXSS 语法解析")]),a._v(" "),e("li",[a._v("WXSS 编译原理")]),a._v(" "),e("li",[a._v("WXSS 动态适配设计")])]),a._v(" "),e("p",[a._v("与 CSS 相比，WXSS 扩展的特性有：尺寸单位和样式导入两个方面，我们最为熟悉的就是尺寸单位 rpx。")]),a._v(" "),e("h4",{attrs:{id:"rpx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rpx"}},[a._v("#")]),a._v(" rpx")]),a._v(" "),e("p",[a._v("rpx （responsive pixel）直译为：响应像素。写过小程序的都知道这个单位，可以自动适配所有大小的屏幕，而不必使用一些第三方插件进行响应式布局。")]),a._v(" "),e("p",[a._v("通常我们开发移动端 Web 的时候，总会遇到像素点适配问题，其中就存在布局问题，曾经我们为了做一些响应式的布局，引入 REM，VW 等，或者工程化之后使用 px2remvw,这样的自动转化插件。而小程序的适配方案则为 rpx。我们继续分析。")]),a._v(" "),e("h3",{attrs:{id:"编译"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[a._v("#")]),a._v(" 编译")]),a._v(" "),e("p",[a._v("WXSS 并不可以直接执行在 webview 层进行渲染，而是通过了一层编译。")]),a._v(" "),e("p",[a._v("wxss 会先被编译为 js 文件")]),a._v(" "),e("p",[a._v("分三个部分看")]),a._v(" "),e("h4",{attrs:{id:"设备信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设备信息"}},[a._v("#")]),a._v(" 设备信息")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/ad33e2884c5b847802f12d2760cab6a4.webp",alt:""}})]),a._v(" "),e("h4",{attrs:{id:"转换-rpx-部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#转换-rpx-部分"}},[a._v("#")]),a._v(" 转换 rpx 部分")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" eps "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1e-4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" transformRPX "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n  window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("__transformRpx__ "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("number"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" newDeviceWidth")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("number "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    number "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("number "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[a._v("BASE_DEVICE_WIDTH")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("newDeviceWidth "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" deviceWidth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    number "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("floor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("number "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" eps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("number "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("deviceDPR "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("isIOS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" number"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("p",[a._v("最主要是这两行")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("number "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("number "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[a._v("BASE_DEVICE_WIDTH")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("newDeviceWidth "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" deviceWidth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nnumber "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("floor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("number "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" eps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("h4",{attrs:{id:"setcsstohead-函数将样式插入到-head"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setcsstohead-函数将样式插入到-head"}},[a._v("#")]),a._v(" setCssToHead 函数将样式插入到 head")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/4fe477408d2e6f86dba14e21962a8081.webp",alt:""}}),a._v(" "),a._v("\n主要功能\n将 wxss 的文件内容数据结构改变，方便 "),e("code",[a._v("makeup")]),a._v(" 组装，将有 rpx 单位的数据改成[0,20] 这样。transformRPX 转换 。")]),a._v(" "),e("p",[e("strong",[a._v("makeup 组装之后，创建"),e("code",[a._v("<style>")]),a._v("标记，插入到"),e("code",[a._v("<head>")]),a._v("中。")])]),a._v(" "),e("p",[a._v("在渲染层中使用 "),e("code",[a._v("eval")]),a._v(" 方法执行上面编译后的 js 文件，然后插入到 head 中")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/8b32c80bf539bc4e768d4b8cf69b1e2b.webp",alt:""}})]),a._v(" "),e("h2",{attrs:{id:"virtualdom-渲染流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#virtualdom-渲染流程"}},[a._v("#")]),a._v(" VirtualDOM 渲染流程")]),a._v(" "),e("p",[a._v("和 WXSS 一样，生成一下 wxml.js")]),a._v(" "),e("p",[a._v("可以看到主体就一个函数 "),e("code",[a._v("$gwx")]),a._v(",作用是生成 虚拟 dom 树，用于渲染真实节点。")]),a._v(" "),e("p",[a._v("编译后的 WXML 文件以 js 的形式插入到渲染层的 "),e("code",[a._v("<script>")]),a._v(" 标签")]),a._v(" "),e("p",[a._v("然后找到执行的位置 看到传入的是路径")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" decodeName "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("decodeURI")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./pages/index/index.wxml"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" generateFunc "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("$gwx")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("decodeName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("p",[a._v("返回的是 generateFunc()")]),a._v(" "),e("p",[a._v("generateFunc() 执行的时候需要动态注入数据，生成 DOM 树")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/5861fd7f73d3b7c8be37c527f973b9b0.webp",alt:""}})]),a._v(" "),e("h2",{attrs:{id:"事件系统和通讯系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件系统和通讯系统"}},[a._v("#")]),a._v(" 事件系统和通讯系统")]),a._v(" "),e("h3",{attrs:{id:"什么是事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是事件"}},[a._v("#")]),a._v(" 什么是事件？")]),a._v(" "),e("ul",[e("li",[a._v("事件是视图层到逻辑层的通讯方式。")]),a._v(" "),e("li",[a._v("事件可以将用户的行为反馈到逻辑层进行处理。")]),a._v(" "),e("li",[a._v("事件可以绑定在组件上，当达到触发事件，就会执行逻辑层中对应的事件处理函数。")]),a._v(" "),e("li",[a._v("事件对象可以携带额外信息，如 id, dataset, touches。")])]),a._v(" "),e("p",[a._v("事件可以绑定在组件上，在 Exparser 组件系统章节的时候我们讲解到了 Shadow DOM 的事件系统。")]),a._v(" "),e("h3",{attrs:{id:"事件系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件系统"}},[a._v("#")]),a._v(" 事件系统")]),a._v(" "),e("p",[a._v("WXML 需要处理成 HTML 结构在可以完成事件绑定")]),a._v(" "),e("p",[a._v("底层基础库中 "),e("code",[a._v("applyProperties")]),a._v(" 解析 "),e("code",[a._v("virtualDom")]),a._v(" ,"),e("code",[a._v("attr属性解析，包括事件解析，")]),a._v("\n解析到 "),e("code",[a._v("attr")]),a._v(" 属性名后，对其通过 "),e("code",[a._v("addListener")]),a._v(" 进行事件绑定，将 "),e("code",[a._v("tap")]),a._v(" 与原生 "),e("code",[a._v("click")]),a._v(" 之间映射， "),e("code",[a._v("addListener")]),a._v(" 的事件触发的回调函数中组装了函数的 event 信息值，并且触发了 "),e("code",[a._v("sendData")]),a._v(" 方法。")]),a._v(" "),e("p",[a._v("这样的话只要 tap 事件触发的话，就会调用这个回调方法。")]),a._v(" "),e("p",[a._v("到这步流程\n"),e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ea3bd75174b042baac4641bf44841d4c~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:""}})]),a._v(" "),e("p",[a._v("小程序的事件都是和 js 原生事件相互转换，小程序的 tap 底层是 mouseup 事件转换来")]),a._v(" "),e("p",[a._v("分为几个过程：\n为 window 绑定捕获阶段的 mouseuop 事件")]),a._v(" "),e("ul",[e("li",[a._v("包括返回一些坐标信息、目标元素信息。")]),a._v(" "),e("li",[a._v("创建一个 exparser 事件")])]),a._v(" "),e("p",[a._v("函数 C 的返回值触发目标元素的 exparser 事件，通过 exparser.Event.dispatchEvent 方法，执行这个方法就会走 exparser 事件系统的流程。看到这里忘了的可以回顾一下 exparser 组件系统章节。")]),a._v(" "),e("p",[a._v("流程如下")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/20273afb28f212f82dd9e15224c9f7b0.webp",alt:""}})]),a._v(" "),e("h3",{attrs:{id:"通讯系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通讯系统"}},[a._v("#")]),a._v(" 通讯系统")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/2f4750033e94f01570d60206a85441ac.webp",alt:""}})]),a._v(" "),e("p",[a._v("可以看到 sendData 并不是直接指向逻辑层的（也就是 Event 这两条线）。小程序逻辑层和渲染层的通信会由 "),e("code",[a._v("Native")]),a._v(" （微信客户端）做中转，逻辑层发送网络请求也经由 "),e("code",[a._v("Native")]),a._v(" 转发。")]),a._v(" "),e("p",[a._v("在微信小程序执行过程中， "),e("code",[a._v("Native")]),a._v(" 层，也就是客户端层分别向渲染层与逻辑层注入 "),e("code",[a._v("WeixinJSBridge")]),a._v(" 以达到线程通讯的目的，前面章节中在分析渲染层结构和逻辑层结构中我们也都看到了其中"),e("code",[a._v("WeixinJSBridge")]),a._v("的"),e("code",[a._v("<script>")]),a._v("标记注入")]),a._v(" "),e("h2",{attrs:{id:"逻辑语法和生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#逻辑语法和生命周期"}},[a._v("#")]),a._v(" 逻辑语法和生命周期")]),a._v(" "),e("h3",{attrs:{id:"js-结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-结构"}},[a._v("#")]),a._v(" js 结构")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/0ee8193bff5edeefaba28652dacd36b9.webp",alt:""}})]),a._v(" "),e("p",[a._v("data 和 view 相互绑定，WXML 中的动态数据就是 data，使用 setData 改变 data")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/318bf472d2ed6a66a47369f255b9b6a4.webp",alt:""}})]),a._v(" "),e("p",[a._v("两个线程同时进行，渲染层完成初始化后通知逻辑层，逻辑层完成初始化返回初始 Data")]),a._v(" "),e("h3",{attrs:{id:"生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[a._v("#")]),a._v(" 生命周期")]),a._v(" "),e("p",[a._v("生命周期也是挂在在 data 同一级。\n配合整体架构图来看一下生命周期。")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/56ee85c542b3bcb3b2e34c2dd2cfe1aa.webp",alt:""}})]),a._v(" "),e("p",[a._v("小程序的每个页面都是一个 webview 实例，但是逻辑层中只有一个 APP 实例，所有页面的逻辑都在一个逻辑线程中执行。")]),a._v(" "),e("h2",{attrs:{id:"小程序路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小程序路由"}},[a._v("#")]),a._v(" 小程序路由")]),a._v(" "),e("p",[a._v("回顾一下小程序页面加载的原理，如果我们跳转到一个新页面，那么在渲染层中会插入一个 webview，渲染层中可以有多个 webview。")]),a._v(" "),e("p",[a._v("这样类似多页面，保留上一个页面的状态，这里对于 webview 的添加或删除都会有一个载体来维护，这就是路由栈。")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2023/08/a5dd1728ef520eeef2073598d132a3b8.webp",alt:"打开页面的路由内部流程"}}),a._v(" "),a._v("\n打开页面的路由内部流程")]),a._v(" "),e("h2",{attrs:{id:"扩展"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[a._v("#")]),a._v(" 扩展")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://developers.weixin.qq.com/doc/oplatform/Miniprogram_Frame/",target:"_blank",rel:"noopener noreferrer"}},[a._v("小程序硬件框架"),e("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);